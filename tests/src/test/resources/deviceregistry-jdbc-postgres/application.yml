hono:

  app:
    maxInstances: 1

  healthCheck:
    insecurePortBindAddress: "0.0.0.0"
    insecurePort: ${vertx.health.port}

  messaging:
    name: "Hono Device Registry JDBC"
    host: "${hono.amqp-network.host}"
    port: 5673
    amqpHostname: "hono-internal"
    keyPath: "/opt/hono/config/certs/device-registry-key.pem"
    certPath: "/opt/hono/config/certs/device-registry-cert.pem"
    trustStorePath: "/opt/hono/config/certs/trusted-certs.pem"
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}

  auth:
    host: "${hono.auth.host}"
    port: 5671
    name: "device-registry"
    trustStorePath: "/opt/hono/config/certs/trusted-certs.pem"
    validation:
      certPath: "/opt/hono/config/certs/auth-server-cert.pem"

  registry:
    amqp:
      insecurePortEnabled: true
      insecurePortBindAddress: "0.0.0.0"
    http:
      authenticationRequired: false
      insecurePortEnabled: true
      insecurePortBindAddress: "0.0.0.0"
      maxPayloadSize: ${hono.deviceregistry.maxPayloadSize}
    jdbc:
      adapter:
        url: "${hono.jdbc.db.url}"
        driverClass: "org.postgresql.Driver"
        username: "${hono.jdbc.db.registry.username}"
        password: "${hono.jdbc.db.registry.password}"
      management:
        url: "${hono.jdbc.db.url}"
        driverClass: "org.postgresql.Driver"
        username: "${hono.jdbc.db.registry.username}"
        password: "${hono.jdbc.db.registry.password}"
    svc:
      maxBcryptCostFactor: ${max.bcrypt.costFactor}

  tenant:
    jdbc:
      adapter:
        url: "${hono.jdbc.db.url}"
        driverClass: "org.postgresql.Driver"
        username: "${hono.jdbc.db.registry.username}"
        password: "${hono.jdbc.db.registry.password}"
      management:
        url: "${hono.jdbc.db.url}"
        driverClass: "org.postgresql.Driver"
        username: "${hono.jdbc.db.registry.username}"
        password: "${hono.jdbc.db.registry.password}"
    svc:

  kafka:
    commonClientConfig:
      bootstrap.servers: "${hono.kafka.bootstrap.servers}"

quarkus:
  jaeger:
    agent-host-port: "${jaeger.agent-host-port}"
    sampler-manager-host-port: "${jaeger.sampler-manager-host-port}"
    service-name: "${hono.registration.host}"
  log:
    console:
      color: true
    level: INFO
    min-level: TRACE
    category:
      "io.quarkus.jaeger":
        level: DEBUG
      "io.quarkus.vertx.core.runtime":
        level: DEBUG
  vertx:
    max-event-loop-execute-time: ${max.event-loop.execute-time}
