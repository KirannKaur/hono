hono:
  app:
    maxInstances: 1
  healthCheck:
    insecurePortBindAddress: 0.0.0.0
    insecurePort: ${vertx.health.port}
  messaging:
    name: "Hono Device Registry MongoDb"
    host: "${hono.amqp-network.host}"
    port: 5673
    amqpHostname: hono-internal
    keyPath: "/${hono.deviceregistry.mongodb.config-dir}/certs/device-registry-key.pem"
    certPath: "/${hono.deviceregistry.mongodb.config-dir}/certs/device-registry-cert.pem"
    trustStorePath: "/${hono.deviceregistry.mongodb.config-dir}/certs/trusted-certs.pem"
    linkEstablishmentTimeout: ${link.establishment.timeout}
    flowLatency: ${flow.latency}
    requestTimeout: ${request.timeout}
  auth:
    host: ${hono.auth.host}
    port: 5671
    name: device-registry
    trustStorePath: "/${hono.deviceregistry.mongodb.config-dir}/certs/trusted-certs.pem"
    validation:
      certPath: "/${hono.deviceregistry.mongodb.config-dir}/certs/auth-server-cert.pem"
  registry:
    amqp:
      insecurePortEnabled: true
      insecurePortBindAddress: 0.0.0.0
    http:
      authenticationRequired: true
      insecurePortEnabled: true
      insecurePortBindAddress: 0.0.0.0
      maxPayloadSize: ${hono.deviceregistry.maxPayloadSize}
      auth:
        collectionName: "registryusers"
        usernameField: "login"
        passwordField: "pwdHash"
        saltField: "spice"
        hashAlgorithm: "PBKDF2"
    svc:
  credentials:
    svc:
      encryptionKeyFile: "/${hono.deviceregistry.mongodb.config-dir}/encryptionKeys.yml"
      maxBcryptCostFactor: ${max.bcrypt.costFactor}
  tenant:
    svc:
  mongodb:
    connectionString: "mongodb://${hono.mongodb.username}:${hono.mongodb.password}@${hono.mongodb.host}:${hono.mongodb.port}/${hono.mongodb.database.name}"
#    host: ${hono.mongodb.host}
#    port: ${hono.mongodb.port}
#    dbName: ${hono.mongodb.database.name}
#    username: ${hono.mongodb.username}
#    password: ${hono.mongodb.password}
  vertx:
    maxEventLoopExecuteTime: ${max.event-loop.execute-time}
    preferNative: true
  kafka:
    commonClientConfig:
      bootstrap.servers: ${hono.kafka.bootstrap.servers}

quarkus:
  jaeger:
    service-name: "${hono.registration.host}"
  log:
    console:
      color: true
    level: INFO
    min-level: TRACE
    category:
      "io.quarkus.jaeger":
        level: DEBUG
      "io.quarkus.vertx.core.runtime":
        level: DEBUG
  vertx:
    max-event-loop-execute-time: ${max.event-loop.execute-time}

spring:
  jmx:
    enabled: false

management:
  port: -1

server:
  port: -1
